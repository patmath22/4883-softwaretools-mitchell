(function() { var jsonp = 'apstag.renderImp({\"ev\":false,\"amzniid\":\"JJKVJ6HqwSM7qyO0BhhEHfcAAAGI26tAnAEAAAPsAQBhcHNfdHhuX2JpZDEgICBhcHNfdHhuX2ltcDEgICChf9nE\",\"html\":\"<div data-str-native-key=\\\"vKxMWzYhEF9AiGbwd9gbzexi\\\" data-stx-response-name=\\\"str_response_a54c4164_f78b_4dd9_a2d4_2b1bd9d732f4\\\"><\\\/div><script>window[\\\"str_response_a54c4164_f78b_4dd9_a2d4_2b1bd9d732f4\\\"] = \\\"\\\"<\\\/script><script>(function() {if (!(window.STR && window.STR.Tag)) {const sfp_js = document.createElement(\'script\');sfp_js.src = \\\"https:\/\/native.sharethrough.com\/assets\/sfp.js\\\";sfp_js.type = \'text\/javascript\';sfp_js.charset = \'utf-8\';try {window.document.getElementsByTagName(\'body\')[0].appendChild(sfp_js);} catch(e) {console.log(e);}}})();<\\\/script>\\n<img height=\\\"1\\\" width=\\\"1\\\" style=\\\"display:none\\\" src=\\\"https:\/\/aax-us-east.amazon-adsystem.com\/e\/dtb\/imp?b=JJKVJ6HqwSM7qyO0BhhEHfcAAAGI26tAnAEAAAPsAQBhcHNfdHhuX2JpZDEgICBhcHNfdHhuX2ltcDEgICChf9nE&pp=mfscg0&isip=1&vi=1\\\"\/>\"});\n'; var context = { propertyId: '_qY_cll_hDNjv1f3a-4WhaOO4Ic', callback: function(bt, bid, isb, propid, tagid, impdata) { top.window.postMessage({bidInfo: {jsonp: 'apstag.renderImp({\"ev\":false,\"amzniid\":\"JJKVJ6HqwSM7qyO0BhhEHfcAAAGI26tAnAEAAAPsAQBhcHNfdHhuX2JpZDEgICBhcHNfdHhuX2ltcDEgICChf9nE\",\"html\":\"<div data-str-native-key=\\\"vKxMWzYhEF9AiGbwd9gbzexi\\\" data-stx-response-name=\\\"str_response_a54c4164_f78b_4dd9_a2d4_2b1bd9d732f4\\\"><\\\/div><script>window[\\\"str_response_a54c4164_f78b_4dd9_a2d4_2b1bd9d732f4\\\"] = \\\"\\\"<\\\/script><script>(function() {if (!(window.STR && window.STR.Tag)) {const sfp_js = document.createElement(\'script\');sfp_js.src = \\\"https:\/\/native.sharethrough.com\/assets\/sfp.js\\\";sfp_js.type = \'text\/javascript\';sfp_js.charset = \'utf-8\';try {window.document.getElementsByTagName(\'body\')[0].appendChild(sfp_js);} catch(e) {console.log(e);}}})();<\\\/script>\\n<img height=\\\"1\\\" width=\\\"1\\\" style=\\\"display:none\\\" src=\\\"https:\/\/aax-us-east.amazon-adsystem.com\/e\/dtb\/imp?b=JJKVJ6HqwSM7qyO0BhhEHfcAAAGI26tAnAEAAAPsAQBhcHNfdHhuX2JpZDEgICBhcHNfdHhuX2ltcDEgICChf9nE&pp=mfscg0&isip=1&vi=1\\\"\/>\"});\n'},blockData: {blockInfo: JSON.stringify({bt: bt, bid: bid, isb: isb, propid: propid, tagid: tagid, impdata: impdata})}}, '*');}, bid: { ad: null, adId: '5b286190338513af73f09c28-430otknd', bidder: '117oq2o', size: '300x250', source: '%%SOURCE%%' }, cqWrapper: function(iframeDoc, context) { var confiant = window.top.confiant;            confiant.cmd.push(function() { if (confiant.services && confiant.services().wrap) { confiant.services().wrap(iframeDoc, context.bid, context.propertyId, context.callback) } else { iframeDoc.write(context.bid.ad);                    iframeDoc.close() } }) } }; var runtimeId = context.bid.adId + '_' + Date.now(); var renderImpArgs = null; var renderCommitted = false; var a = window.apstag;    a.runtime = a.runtime || {}; var r = a.runtime;    r[runtimeId] = context;    r.callCqWrapper = r.callCqWrapper || function(iframeDoc, runtimeId) { var context = this[runtimeId];        context.cqWrapper.apply(null, [iframeDoc, context]);        delete this[runtimeId] };    function beginAdPlacement() { try { window.top.postMessage({ renderData: { id: runtimeId, renderStart: Date.now() } }, '*');            loadConfiant();            setProperties();            renderWithScriptNode() } catch (ignore) { renderDefault() } }    function renderDefault() { if (renderCommitted) return;        renderCommitted = true;        eval(jsonp) }    function loadConfiant() { window.confiant = window.confiant || {};        eval('');        window.confiant.cmd = window.confiant.cmd || []; if (confiant.services && confiant.services().wrap || document.scripts['confiant-sdk']) return; var el = document.createElement('script');        el.setAttribute('name', 'confiant-sdk');        el.async = '';        el.src = '//cdn.confiant-integrations.net/' + context.propertyId + '/gpt_and_prebid/config.js';        el.onerror = function() { renderDefault() };        document.head.appendChild(el) }    function renderWithScriptNode() { if (renderCommitted) return;        renderImpArgs.html = '<scr' + 'ipt type="text/javascript">window.top.apstag.runtime.callCqWrapper(document,"' + runtimeId + '");</scr' + 'ipt>';        renderCommitted = true;        a.renderImp(renderImpArgs) }    function setProperties() { var func = a.renderImp; try { a.renderImp = function(obj) { renderImpArgs = obj };            eval(jsonp);            context.bid.ad = renderImpArgs.html + '<script type="text/javascript">window.top.postMessage({renderData:{id:"' + runtimeId + '",renderEnd:Date.now()}},"*")</script>' } finally { a.renderImp = func } } beginAdPlacement() })()